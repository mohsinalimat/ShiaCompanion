name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches:
    - master
    
# on: push    # Default will running for every branch.
    
jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
    
    # Setup Java environment in order to build the Android app.
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    
    # Setup the flutter environment.
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable' # 'dev', 'alpha', default to: 'stable'
        # flutter-version: '1.12.x' # you can also specify exact version of flutter
    
    # - run: flutter  config --enable-web
    # Get flutter dependencies.
    - run: flutter pub get
    
    # Check for any formatting issues in the code.
    - run: flutter format --set-exit-if-changed .
    
    # Statically analyze the Dart code for any errors.
    - run: flutter analyze .
    
    # Run widget tests for our flutter project.
    - run: flutter test --coverage
    # Upload coverage reports to Codecov
    # https://github.com/marketplace/actions/codecov
    - name: Codecov
      uses: codecov/codecov-action@v1.0.13
      with:
        file: coverage/lcov.info
    
    # Build apk.
    # - run: flutter build apk
    
    # # Upload generated apk to the artifacts.
    # - uses: actions/upload-artifact@v1
    #   with:
    #     name: release-apk
    #     path: build/app/outputs/apk/release/app-release.apk

    # build Flutter web version
    # - run: flutter build web
    # Handle the deploy process of your project to GitHub Pages.
    # https://github.com/JamesIves/github-pages-deploy-action
    # - uses: JamesIves/github-pages-deploy-action@releases/v3
    #   with:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }}
    #     BASE_BRANCH: master
    #     BRANCH: gh-pages
    #     FOLDER: build/web
